<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icia.mapper.ProductMapper">
<select id="replyCount" parameterType="int">
	select count(*)from reply
	where product_id = #{product_id}
</select>
<select id="count" resultType="int">
		<!-- index_ffs를 인덱스를 블록단위로 읽는다
			 단 뒤에 컬럼이 인덱스에 해당하는 컬럼만 와야 적용된다
		 -->
		 <![CDATA[
		select /*+ index_ffs(product product_pk_product_id) */ count(Y.product_id) from(select X.rnum,X.product_id,X.product_name,X.price,X.photo_url,X.seller,X.like_cnt
		from(select rownum as rnum, A.product_id,A.product_name, A.price, A.photo_url, A.seller, A.like_cnt
		from(select product_id, product_name,price,photo_url,seller,like_cnt from product order by product_id desc) A
		where rownum <= (#{page}*#{perPageNum})) X
		where X.rnum >= (#{page}*#{perPageNum})-8) Y	
		]]>	
	</select>
	
	<select id="list" resultType="product">
	<![CDATA[
	select X.rnum,X.product_id,X.product_name,X.price,X.photo_url,X.seller,X.like_cnt
		from(select rownum as rnum, A.product_id,A.product_name, A.price, A.photo_url, A.seller, A.like_cnt
		from(select product_id, product_name,price,photo_url,seller,like_cnt from product order by product_id desc) A
		where rownum <= (#{page}*#{perPageNum})) X
		where X.rnum >= (#{page}*#{perPageNum})-8
		
	]]>
	</select>
	<select id="allRead" resultType="product" parameterType="string">
		select distinct product_name from product where product_name like '%'||#{value}||'%'
	</select>
	<select id="searchList" parameterType="hashmap" resultType="product">
		<![CDATA[
	select X.rnum,X.product_id,X.product_name,X.price,X.photo_url,X.seller,X.like_cnt
		from(select rownum as rnum, A.product_id,A.product_name, A.price, A.photo_url, A.seller, A.like_cnt
		from(select product_id, product_name,price,photo_url,seller,like_cnt from product where product_name = #{product_name} order by product_id desc) A
		where rownum <= (#{page}*#{perPageNum})) X
		where X.rnum >= (#{page}*#{perPageNum})-8
		
	]]>
	</select>
	
	<select id="read" resultType="product" parameterType="int">
		select product_id,product_name, price, photo_url,read_cnt, seller, like_cnt
		from product where product_id=#{product_id} and rownum=1
	</select>
	
	<insert id="write" parameterType="product">
		<!-- selectKey로 생성한 bno는 어디에 담겨있나? board -->
		<selectKey keyProperty="product_id" order="BEFORE" resultType="int">
			select product_id.nextval from dual 
		</selectKey>
		insert into product(product_id, product_name, price, photo_url, seller)
		values(#{product_id}, #{product_name}, #{price},#{photo_url, jdbcType=VARCHAR}, #{seller})
	</insert>
	
	<update id="update" parameterType="product">
		update product set product_name=#{product_name}, price=#{price}, photo_url=#{photo_url, jdbcType=VARCHAR} where product_id=#{product_id} and rownum=1
	</update>
	
	<delete id="delete" parameterType="int">
		delete from product where product_id=#{product_id} and rownum=1
	</delete>
	<update id="increase" parameterType="int">
		update product set read_cnt = read_cnt+1 where product_id = #{product_id} and rownum=1
	</update>
	<update id="like_increase" parameterType="int">
		update product set like_cnt = like_cnt+1 where product_id = #{product_id} and rownum=1
	</update>
	<select id="searchSeller" parameterType="int" resultType="string">
		select seller from product where product_id = #{product_id} and rownum=1
	</select>
	<select id="sellerProduct_id" parameterType="string" resultType="hashmap">
		select product_id from product where seller = #{seller}
	</select>
	<select id="sellerProduct_id_count" parameterType="string" resultType="int">
		select count(product_id) from product where seller = #{seller}
	</select>
</mapper>








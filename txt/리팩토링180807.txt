*리팩토링이란 무엇인가 ?
 
-리팩토링은 외부동작을 바꾸지 않고 내부 구조를 개선하는 방법.

*리팩토링시 중요한 점

-이해하기 쉽고, 수정하기 쉽도록 만드는것이고, 외부에 보이는 기능을 변경하지 않는 것이다.
-리팩토링 할 때는 기능을 추가해서는 안되고, 단지 코드의 구조에만 신경 써야한다.
-리팩토링은 동작을 바구는 것이 아니라 우리가 빠른 속도로 개발할 수 있도록 하는 특성을 좀더 많이 주어, 프로그램 가치 UP

*리팩토링을 해야 하는 이유

-리팩토링은 소프트웨어의 디자인을 개선시킨다.
-리팩토링은 버그를 찾도록 도와준다.

*리팩토링은 언제 해야 하는가 ?

-기능을 추가할 때 리팩토링을 하라.
-버그를 수정해야 할 때 리팩토링을 하라

*어떤것을 리팩토링 해야 하는가 ?

-중복된 코드 (Duplicated Code)
-긴 메소드 (Long Method)
-거대한 클래스 (Large Class)
-긴 파라미터 리스트 (Long Parameter List)
-확산적 변경 (Divergent Change)
-기능에 대한 욕심 (Feature Envy)
-데이터 덩어리 (Data Clump)
